{"ast":null,"code":"import { all, call, takeLatest, put } from \"@redux-saga/core/effects\";\nimport { shopActionTypes } from './ShopActionTypes';\nimport { shopUpdateStart, shopUpdateSuccess, shopUpdateFail } from './ShopActions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nfunction* onItemsUpdate() {\n  console.log('liaaam');\n  put(shopUpdateStart());\n\n  try {\n    const collectionRef = yield firestore.collection('Collections');\n    const snap = yield collectionRef.get();\n    const collections = yield call(convertCollectionsSnapshotToMap, snap);\n    put(shopUpdateSuccess(collections));\n  } catch (err) {\n    put(shopUpdateFail(err));\n  }\n}\n\n;\n\nfunction* itemsStart() {\n  yield takeLatest(shopActionTypes.ON_ITEMS_UPDATE, onItemsUpdate);\n}\n\n;\nexport function* shopSaga() {\n  yield all([call(itemsStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/ShopSagas.js"],"names":["all","call","takeLatest","put","shopActionTypes","shopUpdateStart","shopUpdateSuccess","shopUpdateFail","firestore","convertCollectionsSnapshotToMap","onItemsUpdate","console","log","collectionRef","collection","snap","get","collections","err","itemsStart","ON_ITEMS_UPDATE","shopSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,0BAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,cAA7C,QAAkE,eAAlE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,UAAUC,aAAV,GACA;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,EAAAA,GAAG,CAACE,eAAe,EAAhB,CAAH;;AACA,MAAI;AACA,UAAMQ,aAAa,GAAG,MAAML,SAAS,CAACM,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAnB;AACA,UAAMC,WAAW,GAAG,MAAMhB,IAAI,CAACQ,+BAAD,EAAkCM,IAAlC,CAA9B;AACAZ,IAAAA,GAAG,CAACG,iBAAiB,CAACW,WAAD,CAAlB,CAAH;AACH,GALD,CAMA,OAAOC,GAAP,EACA;AACIf,IAAAA,GAAG,CAACI,cAAc,CAACW,GAAD,CAAf,CAAH;AACH;AACJ;;AAAA;;AAED,UAAUC,UAAV,GACA;AACI,QAAMjB,UAAU,CAACE,eAAe,CAACgB,eAAjB,EAAkCV,aAAlC,CAAhB;AACH;;AAAA;AAED,OAAO,UAAUW,QAAV,GAAqB;AACtB,QAAMrB,GAAG,CAAC,CAACC,IAAI,CAACkB,UAAD,CAAL,CAAD,CAAT;AACL;AAAA","sourcesContent":["import { all, call, takeLatest, put } from \"@redux-saga/core/effects\";\r\nimport { shopActionTypes } from './ShopActionTypes';\r\nimport { shopUpdateStart, shopUpdateSuccess, shopUpdateFail} from './ShopActions';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nfunction* onItemsUpdate()\r\n{\r\n    console.log('liaaam');\r\n    put(shopUpdateStart());\r\n    try {\r\n        const collectionRef = yield firestore.collection('Collections');\r\n        const snap = yield collectionRef.get();\r\n        const collections = yield call(convertCollectionsSnapshotToMap, snap);\r\n        put(shopUpdateSuccess(collections));\r\n    }\r\n    catch (err)\r\n    {\r\n        put(shopUpdateFail(err))\r\n    }\r\n};\r\n\r\nfunction* itemsStart()\r\n{\r\n    yield takeLatest(shopActionTypes.ON_ITEMS_UPDATE, onItemsUpdate);\r\n};\r\n\r\nexport function* shopSaga() {\r\n      yield all([call(itemsStart)])\r\n};"]},"metadata":{},"sourceType":"module"}