{"ast":null,"code":"import { collectionActionTypes } from \"./Collection.ActionTypes\";\nimport { firestore, convertCollectionTypeSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const updateCollectionTypes = data => ({\n  type: collectionActionTypes.UPDATE_COLLECTION_TYPES,\n  payload: data\n});\nexport const updateCollectionStart = () => ({\n  type: collectionActionTypes.START_COLLECTION_UPDATE\n});\nexport const updateCollectionStartAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: collectionActionTypes.START_COLLECTION_UPDATE\n    }).then(() => firestore.collection('CollectionTypes')).then(collectionRef => collectionRef.get()).then(snap => convertCollectionTypeSnapshotToMap(snap)).then(data => dispatch({\n      type: collectionActionTypes.START_COLLECTION_UPDATE_SUCCESS,\n      payload: data\n    })).catch(err => dispatch({\n      type: collectionActionTypes.START_COLLECTION_UPDATE_FAIL,\n      err: err\n    }));\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Collections/Collection.Actions.js"],"names":["collectionActionTypes","firestore","convertCollectionTypeSnapshotToMap","updateCollectionTypes","data","type","UPDATE_COLLECTION_TYPES","payload","updateCollectionStart","START_COLLECTION_UPDATE","updateCollectionStartAsync","dispatch","then","collection","collectionRef","get","snap","START_COLLECTION_UPDATE_SUCCESS","catch","err","START_COLLECTION_UPDATE_FAIL"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,0BAAtC;AACA,SAASC,SAAT,EAAoBC,kCAApB,QAA8D,+BAA9D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEL,qBAAqB,CAACM,uBADQ;AAEpCC,EAAAA,OAAO,EAAGH;AAF0B,CAAX,CAA9B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAGL,qBAAqB,CAACS;AADO,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AACxC,SAAQC,QAAD,IAAc;AACbA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAGL,qBAAqB,CAACS;AAA/B,KAAD,CAAR,CACCG,IADD,CACO,MAAMX,SAAS,CAACY,UAAV,CAAqB,iBAArB,CADb,EAECD,IAFD,CAEOE,aAAa,IAAIA,aAAa,CAACC,GAAd,EAFxB,EAGCH,IAHD,CAGOI,IAAI,IAAKd,kCAAkC,CAACc,IAAD,CAHlD,EAICJ,IAJD,CAIMR,IAAI,IAAIO,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAGL,qBAAqB,CAACiB,+BAA/B;AAAgEV,MAAAA,OAAO,EAAGH;AAA1E,KAAD,CAJtB,EAKCc,KALD,CAKOC,GAAG,IAAIR,QAAQ,CAAC;AACfN,MAAAA,IAAI,EAAEL,qBAAqB,CAACoB,4BADb;AAEfD,MAAAA,GAAG,EAAEA;AAFU,KAAD,CALtB;AASP,GAVD;AAWP,CAZM","sourcesContent":["import { collectionActionTypes } from \"./Collection.ActionTypes\";\r\nimport { firestore, convertCollectionTypeSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nexport const updateCollectionTypes = (data) => ({\r\n            type: collectionActionTypes.UPDATE_COLLECTION_TYPES,\r\n            payload : data\r\n});\r\n\r\nexport const updateCollectionStart = () => ({\r\n        type : collectionActionTypes.START_COLLECTION_UPDATE\r\n});\r\n\r\nexport const updateCollectionStartAsync = () => {\r\n        return (dispatch) => {\r\n                dispatch({ type : collectionActionTypes.START_COLLECTION_UPDATE})\r\n                .then( () => firestore.collection('CollectionTypes'))\r\n                .then( collectionRef => collectionRef.get())\r\n                .then( snap =>  convertCollectionTypeSnapshotToMap(snap))\r\n                .then(data => dispatch({ type : collectionActionTypes.START_COLLECTION_UPDATE_SUCCESS, payload : data}))\r\n                .catch(err => dispatch({\r\n                        type: collectionActionTypes.START_COLLECTION_UPDATE_FAIL,\r\n                        err: err})\r\n                );\r\n        }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}