{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Shop from './Pages/Shop/Shop.component';\nimport Header from './Components/Header/Header.component';\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\nimport { createUserProfileDocument, auth, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './Redux/User/user-actions';\nimport { selectCurrentUser } from './Redux/User/user.selector';\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\nimport DirectoryComponent from './Components/Directory/Directory.component';\nimport { shopCollections } from './Redux/Shop/shop.selector';\nimport { firestore, convertCollectionTypeSnapshotToMap } from './firebase/firebase.utils';\nimport { updateCollectionTypes } from './Redux/Collections/Collection.Actions';\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\n_c = DirectorySpinnerComponent;\nconst ShopSpinnerComponent = WithSpinner(Shop);\n_c2 = ShopSpinnerComponent;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth, '');\n        (await userRef).onSnapshot(snapshot => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n    const collectionTypeRef = firestore.collection('CollectionTypes');\n    this.unsubscribeFromSnapshot = collectionTypeRef.onSnapshot(async snapshot => {\n      const collectionTypes = await convertCollectionTypeSnapshotToMap(snapshot);\n      console.log(collectionTypes);\n      this.props.setCollectionTypes(collectionTypes);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    //closes subscription to firbase auth \n    this.unsubscribeFromSnapshot();\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: props => /*#__PURE__*/_jsxDEV(DirectorySpinnerComponent, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 82\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 109\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  collections: shopCollections(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  setCollectionTypes: collectionTypes => dispatch(updateCollectionTypes(collectionTypes))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectorySpinnerComponent\");\n$RefreshReg$(_c2, \"ShopSpinnerComponent\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/App.js"],"names":["Component","Switch","Route","Redirect","Shop","Header","SignInAndSignUp","createUserProfileDocument","auth","addCollectionAndDocuments","connect","setCurrentUser","selectCurrentUser","CheckoutPage","DirectoryComponent","shopCollections","firestore","convertCollectionTypeSnapshotToMap","updateCollectionTypes","WithSpinner","DirectorySpinnerComponent","ShopSpinnerComponent","App","unsubscribeFromAuth","unsubscribeFromSnapshot","state","loading","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","collectionTypeRef","collection","collectionTypes","console","log","setCollectionTypes","setState","componentWillUnmount","render","currentUser","mapStateToProps","collections","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport  Shop from './Pages/Shop/Shop.component';\r\nimport Header from './Components/Header/Header.component';\r\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\r\nimport {  createUserProfileDocument, auth, addCollectionAndDocuments } from './firebase/firebase.utils';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser } from './Redux/User/user-actions'\r\nimport { selectCurrentUser } from './Redux/User/user.selector';\r\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\r\nimport DirectoryComponent from './Components/Directory/Directory.component';\r\nimport { shopCollections } from './Redux/Shop/shop.selector';\r\nimport { firestore, convertCollectionTypeSnapshotToMap } from './firebase/firebase.utils';\r\nimport {updateCollectionTypes} from './Redux/Collections/Collection.Actions';\r\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\r\n\r\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\r\nconst ShopSpinnerComponent = WithSpinner(Shop);\r\n\r\nclass  App extends Component\r\n{\r\n  unsubscribeFromAuth = null;\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  state = {\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n   const {setCurrentUser } = this.props;\r\n    \r\n\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged( async userAuth => {\r\n      if(userAuth) \r\n      {\r\n        const userRef =  createUserProfileDocument(userAuth,'');\r\n         (await userRef).onSnapshot( snapshot => {\r\n           setCurrentUser({\r\n             id: snapshot.id,\r\n             ...snapshot.data()\r\n           });\r\n         });\r\n      }\r\n      else\r\n      {\r\n         setCurrentUser(userAuth);\r\n      }\r\n    });\r\n    const collectionTypeRef =  firestore.collection('CollectionTypes');\r\n\r\n    this.unsubscribeFromSnapshot = collectionTypeRef.onSnapshot( async ( snapshot ) => {\r\n          const collectionTypes = await  convertCollectionTypeSnapshotToMap(snapshot);\r\n          console.log(collectionTypes);\r\n          this.props.setCollectionTypes(collectionTypes);\r\n          this.setState({loading : false});\r\n    });\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //closes subscription to firbase auth \r\n    this.unsubscribeFromSnapshot();\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={loading} {...props}/>}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => this.props.currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser :  user =>  dispatch(setCurrentUser(user)),\r\n  setCollectionTypes : collectionTypes => dispatch(updateCollectionTypes(collectionTypes))\r\n});\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}