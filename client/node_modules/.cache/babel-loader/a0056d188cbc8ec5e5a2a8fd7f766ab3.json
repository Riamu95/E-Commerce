{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionsPage from '../Collection/CollectionsPage.component';\nimport ItemPage from '../Item/ItemPage.component';\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\nimport { getIsFetching } from '../../Redux/Shop/shop.selector';\nimport { updateCollectionAsync } from '../../Redux/StoreData.Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionsPageSpinner;\nconst ItemPageSpinner = WithSpinner(ItemPage);\n_c3 = ItemPageSpinner;\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    this.props.updateCollections();\n  }\n\n  render() {\n    const loading = this.props.isFetching;\n    const match = this.props.match;\n    console.log('fecthing', loading);\n    console.log('match', match);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId/:itemId`,\n        render: props => /*#__PURE__*/_jsxDEV(ItemPageSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 96\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isFetching: getIsFetching(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: () => dispatch(updateCollectionAsync())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Shop));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageSpinner\");\n$RefreshReg$(_c3, \"ItemPageSpinner\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","Route","withRouter","connect","CollectionsOverview","CollectionsPage","ItemPage","WithSpinner","getIsFetching","updateCollectionAsync","CollectionsOverviewSpinner","CollectionsPageSpinner","ItemPageSpinner","Shop","Component","componentDidMount","props","updateCollections","render","loading","isFetching","match","console","log","path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,WAAP,MAAwB,oDAAxB;AAEA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;;AAEA,MAAMC,0BAA0B,GAAGH,WAAW,CAACH,mBAAD,CAA9C;KAAMM,0B;AACN,MAAMC,sBAAsB,GAAGJ,WAAW,CAACF,eAAD,CAA1C;MAAMM,sB;AACN,MAAMC,eAAe,GAAGL,WAAW,CAACD,QAAD,CAAnC;MAAMM,e;;AAGN,MAAOC,IAAP,SAAoBb,KAAK,CAACc,SAA1B,CAAqC;AAGlCC,EAAAA,iBAAiB,GACjB;AACI,SAAKC,KAAL,CAAWC,iBAAX;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWI,UAA3B;AAEA,UAAOC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAA1B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAyBJ,OAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsBF,KAAtB;AAEC,wBACQ;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEA,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAMR,KAAD,iBAAW,QAAC,0BAAD;AAA6B,UAAA,SAAS,EAAEG,OAAxC;AAAA,aAAqDH;AAArD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAc,QAAA,IAAI,EAAK,GAAEK,KAAK,CAACG,IAAK,gBAApC;AAAsD,QAAA,MAAM,EAAMR,KAAD,iBAAW,QAAC,sBAAD;AAAyB,UAAA,SAAS,EAAEG,OAApC;AAAA,aAAiDH;AAAjD;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAK,GAAEK,KAAK,CAACG,IAAK,wBAA9B;AAAuD,QAAA,MAAM,EAAIR,KAAD,iBAAW,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAEG,OAA5B;AAAA,aAAyCH;AAAzC;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAOJ;;AAxBiC;;AA2BrC,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,UAAU,EAAGZ,aAAa,CAACkB,KAAD;AADM,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,iBAAiB,EAAG,MAAMW,QAAQ,CAACnB,qBAAqB,EAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeP,UAAU,CAACC,OAAO,CAACsB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cd,IAA5C,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\n\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\r\nimport CollectionsPage from '../Collection/CollectionsPage.component';\r\nimport ItemPage from '../Item/ItemPage.component';\r\n\r\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\r\n\r\nimport {getIsFetching} from '../../Redux/Shop/shop.selector';\r\nimport { updateCollectionAsync } from '../../Redux/StoreData.Action';\r\n\r\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\r\nconst ItemPageSpinner = WithSpinner(ItemPage);\r\n\r\n\r\nclass  Shop extends React.Component  {\r\n   \r\n\r\n   componentDidMount()\r\n   {\r\n       this.props.updateCollections();\r\n   }\r\n   \r\n   render()\r\n   {\r\n       const loading = this.props.isFetching;\r\n\r\n       const  match = this.props.match;\r\n     \r\n       console.log('fecthing' , loading);\r\n       console.log('match' , match);\r\n\r\n        return(\r\n                <div>\r\n                    <Route exact path={`${match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={loading} {...props} />}/>\r\n                    <Route exact  path = {`${match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={loading} {...props} />}/>\r\n                    <Route  path = {`${match.path}/:collectionId/:itemId`} render={ (props) => <ItemPageSpinner isLoading={loading} {...props}/>}/> \r\n            </div>\r\n        );\r\n   }    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isFetching : getIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : () => dispatch(updateCollectionAsync())\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));"]},"metadata":{},"sourceType":"module"}