{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTION,\n  payload: collectionsMap\n});\nexport const updateCollectionsStart = () => ({\n  id: ShopActionTypes.UPDATE_COLLECTION_START\n});\nexport const updateCollectionSuccess = data => ({\n  id: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\n  payload: data\n});\nexport const updateCollectionAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('Collections');\n    updateCollectionsStart();\n    collectionRef.get().then(snmapshot => {});\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateCollections(collectionItems);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTION","payload","updateCollectionsStart","id","UPDATE_COLLECTION_START","updateCollectionSuccess","data","UPDATE_COLLECTION_SUCCESS","updateCollectionAsync","dispatch","collectionRef","collection","get","then","snmapshot","onSnapshot","snapshot","collectionItems","props","setState","loading"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AAClDC,EAAAA,IAAI,EAAIL,eAAe,CAACM,iBAD0B;AAElDC,EAAAA,OAAO,EAAGH;AAFwC,CAArB,CAA1B;AAKP,OAAO,MAAMI,sBAAsB,GAAG,OAAO;AACzCC,EAAAA,EAAE,EAAGT,eAAe,CAACU;AADoB,CAAP,CAA/B;AAKP,OAAO,MAAMC,uBAAuB,GAAIC,IAAD,KAAW;AAC1CH,EAAAA,EAAE,EAAET,eAAe,CAACa,yBADsB;AAE1CN,EAAAA,OAAO,EAAGK;AAFgC,CAAX,CAAhC;AAMP,OAAO,MAAME,qBAAqB,GAAG,MAAM;AACvC,SAAQC,QAAD,IAAc;AAEjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAT,IAAAA,sBAAsB;AAEtBQ,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,SAAS,IAAG,CAEpC,CAFD;AAGAJ,IAAAA,aAAa,CAACK,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,eAAe,GAAG,MAAMrB,+BAA+B,CAACoB,QAAD,CAA7D;AACA,WAAKE,KAAL,CAAWrB,iBAAX,CAA6BoB,eAA7B;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAG;AAAZ,OAAd;AAEH,KALD;AAMH,GAdD;AAeH,CAhBM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nexport const updateCollections = (collectionsMap) => ({\r\n    type :  ShopActionTypes.UPDATE_COLLECTION,\r\n    payload : collectionsMap\r\n});\r\n\r\nexport const updateCollectionsStart = () => ({\r\n    id : ShopActionTypes.UPDATE_COLLECTION_START\r\n});\r\n\r\n\r\nexport const updateCollectionSuccess = (data) => ({\r\n        id: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\r\n        payload : data\r\n});\r\n\r\n\r\nexport const updateCollectionAsync = () => {\r\n    return (dispatch) => {\r\n\r\n        const collectionRef = firestore.collection('Collections');\r\n        updateCollectionsStart();\r\n        \r\n        collectionRef.get().then(snmapshot =>{\r\n\r\n        }) ;\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\r\n            this.props.updateCollections(collectionItems);\r\n            this.setState({ loading : false});\r\n            \r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}