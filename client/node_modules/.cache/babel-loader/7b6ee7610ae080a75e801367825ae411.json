{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Shop from './Pages/Shop/Shop.component';\nimport Header from './Components/Header/Header.component';\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from './Redux/User/user.selector';\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\nimport DirectoryComponent from './Components/Directory/Directory.component';\nimport { shopCollections } from './Redux/Shop/shop.selector';\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\nimport { fetchCollectionsStart } from './Redux/Collections/CollectionActions';\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\n_c = DirectorySpinnerComponent;\n\nconst App = ({\n  isFetching,\n  checkIsUserAuthenticated,\n  setCollectionTypes,\n  currentUser\n}) => {\n  _s();\n\n  useEffect(() => {\n    checkIsUserAuthenticated();\n    setCollectionTypes();\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => /*#__PURE__*/_jsxDEV(DirectorySpinnerComponent, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: Shop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        component: Shop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 71\n        }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: CheckoutPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = App;\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  collections: shopCollections(state),\n  isFetching: selectIsFetching(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCollectionTypes: () => dispatch(fetchCollectionsStart()),\n  checkIsUserAuthenticated: () => dispatch(IsUserAuthenticatedStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n/*\r\nclass  App extends Component\r\n{\r\n\r\n  componentDidMount()\r\n  {\r\n     const { checkIsUserAuthenticated, setCollectionTypes } = this.props;\r\n     checkIsUserAuthenticated();\r\n     setCollectionTypes();\r\n  }\r\n  render()\r\n  {\r\n    const { loading } = this.props.isFetching;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={loading} {...props}/>}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => this.props.currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCollectionTypes : () => dispatch(fetchCollectionsStart()),\r\n  checkIsUserAuthenticated : ( ) => dispatch(IsUserAuthenticatedStart())\r\n});\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectorySpinnerComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/App.js"],"names":["Component","useEffect","Switch","Route","Redirect","Shop","Header","SignInAndSignUp","connect","selectCurrentUser","CheckoutPage","DirectoryComponent","shopCollections","selectIsFetching","fetchCollectionsStart","WithSpinner","IsUserAuthenticatedStart","DirectorySpinnerComponent","App","isFetching","checkIsUserAuthenticated","setCollectionTypes","currentUser","props","mapStateToProps","state","collections","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component , useEffect} from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport  Shop from './Pages/Shop/Shop.component';\r\nimport Header from './Components/Header/Header.component';\r\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from './Redux/User/user.selector';\r\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\r\nimport DirectoryComponent from './Components/Directory/Directory.component';\r\nimport { shopCollections } from './Redux/Shop/shop.selector';\r\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\r\nimport { fetchCollectionsStart } from './Redux/Collections/CollectionActions';\r\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\r\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\r\n\r\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\r\n\r\n\r\nconst App = ({isFetching, checkIsUserAuthenticated, setCollectionTypes, currentUser}) => {\r\n  \r\n  useEffect(() => {\r\n    checkIsUserAuthenticated();\r\n    setCollectionTypes();\r\n  }, [currentUser]);\r\n\r\n \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={isFetching} {...props} />}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCollectionTypes : () => dispatch(fetchCollectionsStart()),\r\n  checkIsUserAuthenticated : () => dispatch(IsUserAuthenticatedStart())\r\n});\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n\r\n\r\n\r\n/*\r\nclass  App extends Component\r\n{\r\n\r\n  componentDidMount()\r\n  {\r\n     const { checkIsUserAuthenticated, setCollectionTypes } = this.props;\r\n     checkIsUserAuthenticated();\r\n     setCollectionTypes();\r\n  }\r\n  render()\r\n  {\r\n    const { loading } = this.props.isFetching;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={loading} {...props}/>}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => this.props.currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCollectionTypes : () => dispatch(fetchCollectionsStart()),\r\n  checkIsUserAuthenticated : ( ) => dispatch(IsUserAuthenticatedStart())\r\n});\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n*/"]},"metadata":{},"sourceType":"module"}