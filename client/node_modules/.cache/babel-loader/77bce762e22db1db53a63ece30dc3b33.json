{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\nimport { getIsFetching } from '../../Redux/Shop/shop.selector';\nimport { updateCollectionAsync } from '../../Redux/Shop/shop.actions';\nimport { ShopActionTypes } from '../../Redux/Shop/shop.types';\nimport { convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { shopCollections } from '../../Redux/Shop/shop.selector';\nimport { ShoppingComponents } from '../../Components/ShoppingComponents/ShoppingComponents.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoppingComponentsWithSpinner = WithSpinner(ShoppingComponents);\n_c = ShoppingComponentsWithSpinner;\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log('SHOP MOUNTED');\n    this.props.updateCollections();\n  }\n\n  render() {\n    const {\n      isFetching\n    } = this.props;\n    console.log(' Fetching Shop Items : ', isFetching);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ShoppingComponentsWithSpinner, {\n        isFetching: isFetching,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isFetching: getIsFetching(state),\n  shopItems: shopCollections(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: () => dispatch(updateCollectionAsync(ShopActionTypes, convertCollectionsSnapshotToMap))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Shop));\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingComponentsWithSpinner\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","Route","withRouter","connect","WithSpinner","getIsFetching","updateCollectionAsync","ShopActionTypes","convertCollectionsSnapshotToMap","shopCollections","ShoppingComponents","ShoppingComponentsWithSpinner","Shop","Component","constructor","props","componentDidMount","console","log","updateCollections","render","isFetching","mapStateToProps","state","shopItems","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAIA,OAAOC,WAAP,MAAwB,oDAAxB;AAEA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAAUC,eAAV,QAAkC,6BAAlC;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,kBAAT,QAAmC,kEAAnC;;AAGA,MAAMC,6BAA6B,GAAGP,WAAW,CAACM,kBAAD,CAAjD;KAAMC,6B;;AACN,MAAMC,IAAN,SAAmBZ,KAAK,CAACa,SAAzB,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEFC,EAAAA,iBAAiB,GACjB;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAKH,KAAL,CAAWI,iBAAX;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKN,KAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAwCG,UAAxC;AACC,wBACQ;AAAA,6BACI,QAAC,6BAAD;AAA+B,QAAA,UAAU,EAAEA,UAA3C;AAAA,WAA2D,KAAKN;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR;AAKJ;;AArBgC;;AAwBpC,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,UAAU,EAAGhB,aAAa,CAACkB,KAAD,CADM;AAEhCC,EAAAA,SAAS,EAAIf,eAAe,CAACc,KAAD;AAFI,CAAZ,CAAxB;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,iBAAiB,EAAG,MAAMO,QAAQ,CAACpB,qBAAqB,CAACC,eAAD,EAAiBC,+BAAjB,CAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeN,UAAU,CAACC,OAAO,CAACmB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cb,IAA5C,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\n\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\r\n\r\nimport {getIsFetching} from '../../Redux/Shop/shop.selector';\r\nimport { updateCollectionAsync } from '../../Redux/Shop/shop.actions';\r\nimport {  ShopActionTypes } from  '../../Redux/Shop/shop.types';\r\nimport { convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { shopCollections } from '../../Redux/Shop/shop.selector';\r\nimport { ShoppingComponents } from '../../Components/ShoppingComponents/ShoppingComponents.component';\r\n\r\n\r\nconst ShoppingComponentsWithSpinner = WithSpinner(ShoppingComponents);\r\nclass Shop extends React.Component  {\r\n   \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n   componentDidMount()\r\n   {\r\n       console.log('SHOP MOUNTED');\r\n       this.props.updateCollections();\r\n   }\r\n   \r\n   render()\r\n   {\r\n       const {isFetching } = this.props;\r\n       console.log(' Fetching Shop Items : ' , isFetching);\r\n        return(\r\n                <div>\r\n                    <ShoppingComponentsWithSpinner isFetching={isFetching} {...this.props}/>\r\n            </div>\r\n        );\r\n   }    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isFetching : getIsFetching(state),\r\n    shopItems :  shopCollections(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : () => dispatch(updateCollectionAsync(ShopActionTypes,convertCollectionsSnapshotToMap))\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));"]},"metadata":{},"sourceType":"module"}