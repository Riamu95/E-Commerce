{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTION,\n  payload: collectionsMap\n});\nexport const updateCollectionsStart = () => ({\n  type: ShopActionTypes.UPDATE_COLLECTION_START\n});\nexport const updateCollectionSuccess = data => ({\n  id: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\n  payload: data\n});\nexport const updateCollectionFailure = data => ({\n  id: ShopActionTypes.UPDATE_COLLECTION_FAIL,\n  error: data\n});\nexport const updateCollectionAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('Collections');\n    dispatch(updateCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collections = await convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollectionSuccess(collections));\n    }).catch(err => dispatch(updateCollectionFailure(err)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTION","payload","updateCollectionsStart","UPDATE_COLLECTION_START","updateCollectionSuccess","data","id","UPDATE_COLLECTION_SUCCESS","updateCollectionFailure","UPDATE_COLLECTION_FAIL","error","updateCollectionAsync","dispatch","collectionRef","collection","get","then","snapshot","collections","catch","err"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AAClDC,EAAAA,IAAI,EAAIL,eAAe,CAACM,iBAD0B;AAElDC,EAAAA,OAAO,EAAGH;AAFwC,CAArB,CAA1B;AAKP,OAAO,MAAMI,sBAAsB,GAAG,OAAO;AACzCH,EAAAA,IAAI,EAAGL,eAAe,CAACS;AADkB,CAAP,CAA/B;AAKP,OAAO,MAAMC,uBAAuB,GAAIC,IAAD,KAAW;AAC1CC,EAAAA,EAAE,EAAEZ,eAAe,CAACa,yBADsB;AAE1CN,EAAAA,OAAO,EAAGI;AAFgC,CAAX,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIH,IAAD,KAAW;AAC9CC,EAAAA,EAAE,EAAEZ,eAAe,CAACe,sBAD0B;AAE9CC,EAAAA,KAAK,EAAGL;AAFsC,CAAX,CAAhC;AAMP,OAAO,MAAMM,qBAAqB,GAAG,MAAM;AAEvC,SAAQC,QAAD,IAAc;AAEjB,UAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,sBAAsB,EAAvB,CAAR;AAEAW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAmB;AACxC,YAAMC,WAAW,GAAG,MAAMtB,+BAA+B,CAACqB,QAAD,CAAzD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,WAAD,CAAxB,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,GAAD,CAAxB,CAHxB;AAIH,GATD;AAUH,CAZM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nexport const updateCollections = (collectionsMap) => ({\r\n    type :  ShopActionTypes.UPDATE_COLLECTION,\r\n    payload : collectionsMap\r\n});\r\n\r\nexport const updateCollectionsStart = () => ({\r\n    type : ShopActionTypes.UPDATE_COLLECTION_START\r\n});\r\n\r\n\r\nexport const updateCollectionSuccess = (data) => ({\r\n        id: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\r\n        payload : data\r\n});\r\n\r\nexport const updateCollectionFailure = (data) => ({\r\n    id: ShopActionTypes.UPDATE_COLLECTION_FAIL,\r\n    error : data\r\n});\r\n\r\n\r\nexport const updateCollectionAsync = () => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        const collectionRef = firestore.collection('Collections');\r\n        dispatch(updateCollectionsStart());\r\n\r\n        collectionRef.get().then(async (snapshot) =>{\r\n            const collections = await convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(updateCollectionSuccess(collections));\r\n        }).catch(err => dispatch(updateCollectionFailure(err)));\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}