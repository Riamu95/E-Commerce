{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCarItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedCount, cartItem) => accumulatedCount + cartItem.quantity, 0));\nexport const selectCartPrice = createSelector([selectCartItems], cart => cart.reduce((accumulatedValue, cartItem) => accumulatedValue + cartItem.price * cartItem.quantity, 0));","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCarItemsCount","reduce","accumulatedCount","cartItem","quantity","selectCartPrice","accumulatedValue","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAKA,KAAK,CAACC,IAAnC;;AAEA,OAAQ,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAIA,IAAI,CAACE,SAA5B,CAAtC;AACR,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAIA,IAAI,CAACI,MAA5B,CAAvC;AAEP,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAAC,CAACI,eAAD,CAAD,EAC7CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,gBAAD,EAAmBC,QAAnB,KAAgCD,gBAAgB,GAAGC,QAAQ,CAACC,QAA7E,EAAsF,CAAtF,CADgC,CAA1C;AAIP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBD,IAAD,IAC7DA,IAAI,CAACM,MAAL,CAAY,CAACK,gBAAD,EAAmBH,QAAnB,KAAgCG,gBAAgB,GAAGH,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACC,QAAzF,EAAkG,CAAlG,CADyC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectCart = state =>  state.cart;\r\n\r\nexport  const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\r\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\r\n\r\nexport const selectCarItemsCount = createSelector([selectCartItems], \r\n    cartItems => cartItems.reduce((accumulatedCount, cartItem) => accumulatedCount + cartItem.quantity,0)\r\n);\r\n\r\nexport const selectCartPrice = createSelector([selectCartItems], (cart) => \r\n    cart.reduce((accumulatedValue, cartItem) => accumulatedValue + cartItem.price * cartItem.quantity,0)\r\n);"]},"metadata":{},"sourceType":"module"}