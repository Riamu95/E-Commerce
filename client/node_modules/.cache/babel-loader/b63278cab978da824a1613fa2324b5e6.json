{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionsPage from '../Collection/CollectionsPage.component';\nimport ItemPage from '../Item/ItemPage.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\nimport { getIsFetching } from '../../Redux/Shop/shop.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionsPageSpinner;\nconst ItemPageSpinner = WithSpinner(ItemPage);\n_c3 = ItemPageSpinner;\n\nconst Shop = ({\n  match,\n  isFetching\n}) => {\n  const {\n    loading\n  } = this.props.isFetching;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n        isLoading: loading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionsPageSpinner, {\n        isLoading: loading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:collectionId/:itemId`,\n      render: props => /*#__PURE__*/_jsxDEV(ItemPageSpinner, {\n        isLoading: loading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 92\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_c4 = Shop;\n\nconst mapStateToProps = state => ({\n  isFetching: getIsFetching(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Shop));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageSpinner\");\n$RefreshReg$(_c3, \"ItemPageSpinner\");\n$RefreshReg$(_c4, \"Shop\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","Route","withRouter","connect","CollectionsOverview","CollectionsPage","ItemPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","getIsFetching","CollectionsOverviewSpinner","CollectionsPageSpinner","ItemPageSpinner","Shop","match","isFetching","loading","props","path","mapStateToProps","state","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;;AACA,MAAMC,0BAA0B,GAAGF,WAAW,CAACN,mBAAD,CAA9C;KAAMQ,0B;AACN,MAAMC,sBAAsB,GAAGH,WAAW,CAACL,eAAD,CAA1C;MAAMQ,sB;AACN,MAAMC,eAAe,GAAGJ,WAAW,CAACJ,QAAD,CAAnC;MAAMQ,e;;AAGN,MAAOC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAKpC,QAAM;AAAEC,IAAAA;AAAF,MAAc,KAAKC,KAAL,CAAWF,UAA/B;AAEA,sBACQ;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAMD,KAAD,iBAAW,QAAC,0BAAD;AAA6B,QAAA,SAAS,EAAED,OAAxC;AAAA,WAAqDC;AAArD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAK,GAAEH,KAAK,CAACI,IAAK,gBAApC;AAAsD,MAAA,MAAM,EAAMD,KAAD,iBAAW,QAAC,sBAAD;AAAyB,QAAA,SAAS,EAAED,OAApC;AAAA,WAAiDC;AAAjD;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAQ,MAAA,IAAI,EAAK,GAAEH,KAAK,CAACI,IAAK,wBAA9B;AAAuD,MAAA,MAAM,EAAID,KAAD,iBAAW,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAED,OAA5B;AAAA,WAAyCC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAOH,CAdD;;MAAOJ,I;;AAgBP,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,UAAU,EAAGN,aAAa,CAACW,KAAD;AADM,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,iBAAiB,EAAGgB,cAAc,IAAID,QAAQ,CAACf,iBAAiB,CAACgB,cAAD,CAAlB;AADV,CAAL,CAAnC;;AAIA,eAAevB,UAAU,CAACC,OAAO,CAACkB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CR,IAA5C,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\r\nimport CollectionsPage from '../Collection/CollectionsPage.component';\r\nimport ItemPage from '../Item/ItemPage.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\r\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\r\nimport {getIsFetching} from '../../Redux/Shop/shop.selector';\r\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\r\nconst ItemPageSpinner = WithSpinner(ItemPage);\r\n\r\n\r\nconst  Shop = ({match, isFetching}) =>  {\r\n   \r\n\r\n\r\n\r\n    const { loading } = this.props.isFetching;\r\n\r\n    return(\r\n            <div>\r\n                <Route exact path={`${match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={loading} {...props} />}/>\r\n                <Route exact  path = {`${match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={loading} {...props} />}/>\r\n                <Route  path = {`${match.path}/:collectionId/:itemId`} render={ (props) => <ItemPageSpinner isLoading={loading} {...props}/>}/> \r\n        </div>\r\n    );    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isFetching : getIsFetching(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));"]},"metadata":{},"sourceType":"module"}