{"ast":null,"code":"import { collectionActionTypes } from \"./Collection.ActionTypes\";\nimport { firestore, convertCollectionTypeSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const updateCollectionTypes = data => ({\n  type: collectionActionTypes.UPDATE_COLLECTION_TYPES,\n  payload: data\n});\nexport const updateCollectionStart = () => ({\n  type: collectionActionTypes.START_COLLECTION_UPDATE\n});\nexport const updateCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('CollectionTypes');\n    dispatch(updateCollectionStart());\n    collectionRef.get().then(snap => {\n      const collections = convertCollectionTypeSnapshotToMap(snap);\n    }).then(data => dispatch({\n      type: collectionActionTypes.START_COLLECTION_UPDATE_SUCCESS,\n      payload: data\n    })).catch(err => dispatch({\n      type: collectionActionTypes.START_COLLECTION_UPDATE_FAIL,\n      err: err\n    }));\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Collections/Collection.Actions.js"],"names":["collectionActionTypes","firestore","convertCollectionTypeSnapshotToMap","updateCollectionTypes","data","type","UPDATE_COLLECTION_TYPES","payload","updateCollectionStart","START_COLLECTION_UPDATE","updateCollectionStartAsync","dispatch","collectionRef","collection","get","then","snap","collections","START_COLLECTION_UPDATE_SUCCESS","catch","err","START_COLLECTION_UPDATE_FAIL"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,0BAAtC;AACA,SAASC,SAAT,EAAoBC,kCAApB,QAA8D,+BAA9D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEL,qBAAqB,CAACM,uBADQ;AAEpCC,EAAAA,OAAO,EAAGH;AAF0B,CAAX,CAA9B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAGL,qBAAqB,CAACS;AADO,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AACxC,SAAQC,QAAD,IAAc;AACb,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,iBAArB,CAAtB;AACAF,IAAAA,QAAQ,CAAEH,qBAAqB,EAAvB,CAAR;AAGAI,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,IAAI,IAAI;AAE7B,YAAMC,WAAW,GAAIf,kCAAkC,CAACc,IAAD,CAAvD;AAEJ,KAJD,EAKCD,IALD,CAKMX,IAAI,IAAIO,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAGL,qBAAqB,CAACkB,+BAA/B;AAAgEX,MAAAA,OAAO,EAAGH;AAA1E,KAAD,CALtB,EAMCe,KAND,CAMOC,GAAG,IAAIT,QAAQ,CAAC;AACfN,MAAAA,IAAI,EAAEL,qBAAqB,CAACqB,4BADb;AAEfD,MAAAA,GAAG,EAAEA;AAFU,KAAD,CANtB;AAUP,GAfD;AAgBP,CAjBM","sourcesContent":["import { collectionActionTypes } from \"./Collection.ActionTypes\";\r\nimport { firestore, convertCollectionTypeSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nexport const updateCollectionTypes = (data) => ({\r\n            type: collectionActionTypes.UPDATE_COLLECTION_TYPES,\r\n            payload : data\r\n});\r\n\r\nexport const updateCollectionStart = () => ({\r\n        type : collectionActionTypes.START_COLLECTION_UPDATE\r\n});\r\n\r\nexport const updateCollectionStartAsync = () => {\r\n        return (dispatch) => {\r\n                const collectionRef = firestore.collection('CollectionTypes')\r\n                dispatch( updateCollectionStart())\r\n                \r\n\r\n                collectionRef.get().then( snap => {\r\n                        \r\n                     const collections =  convertCollectionTypeSnapshotToMap(snap)\r\n                \r\n                })\r\n                .then(data => dispatch({ type : collectionActionTypes.START_COLLECTION_UPDATE_SUCCESS, payload : data}))\r\n                .catch(err => dispatch({\r\n                        type: collectionActionTypes.START_COLLECTION_UPDATE_FAIL,\r\n                        err: err})\r\n                );\r\n        }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}