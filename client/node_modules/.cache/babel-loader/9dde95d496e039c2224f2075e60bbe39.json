{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionsPage from '../Collection/CollectionsPage.component';\nimport ItemPage from '../Item/ItemPage.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionsPageSpinner;\nconst ItemPageSpinner = WithSpinner(ItemPage);\n_c3 = ItemPageSpinner;\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unsubrscribeFromSnapshot = null;\n    this.state = {\n      match: props.match,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.loading);\n    const collectionRef = firestore.collection('Collections');\n    this.unsubrscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateCollections(collectionItems);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubrscribeFromSnapshot();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${this.state.match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${this.state.match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 104\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${this.state.match.path}/:collectionId/:itemId`,\n        component: /*#__PURE__*/_jsxDEV(ItemPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 94\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Shop));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageSpinner\");\n$RefreshReg$(_c3, \"ItemPageSpinner\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","Route","withRouter","connect","CollectionsOverview","CollectionsPage","ItemPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewSpinner","CollectionsPageSpinner","ItemPageSpinner","Shop","Component","constructor","props","unsubrscribeFromSnapshot","state","match","loading","componentDidMount","console","log","collectionRef","collection","onSnapshot","snapshot","collectionItems","setState","componentWillUnmount","render","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\r\nimport CollectionsPage from '../Collection/CollectionsPage.component';\r\nimport ItemPage from '../Item/ItemPage.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\r\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\r\n\r\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\r\nconst ItemPageSpinner = WithSpinner(ItemPage);\r\n\r\n\r\nclass Shop extends React.Component {\r\n   \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            match : props.match,\r\n            loading : true\r\n        };  \r\n    }\r\n\r\n    unsubrscribeFromSnapshot = null;\r\n\r\n    componentDidMount()\r\n    {\r\n        console.log(this.state.loading);\r\n        \r\n        const collectionRef =  firestore.collection('Collections');\r\n        \r\n        this.unsubrscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\r\n            this.props.updateCollections(collectionItems);\r\n            this.setState({ loading : false});\r\n            \r\n        });\r\n       \r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        this.unsubrscribeFromSnapshot();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { loading } = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Route exact path={`${this.state.match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={loading} {...props} />}/>\r\n                <Route exact  path = {`${this.state.match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={loading} {...props} />}/>\r\n                <Route  path = {`${this.state.match.path}/:collectionId/:itemId`} component={<ItemPage/>}/> \r\n        </div>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(Shop));"]},"metadata":{},"sourceType":"module"}