{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionsPage from '../Collection/CollectionsPage.component';\nimport ItemPage from '../Item/ItemPage.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\nimport WithSpinner from '../../Components/withSpinner/WithSpinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      match: props.match\n    };\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('Collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateCollections(collectionItems);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${this.state.match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${this.state.match.path}/:collectionId`,\n        component: CollectionsPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${this.state.match.path}/:collectionId/:itemId`,\n        component: ItemPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return null;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Shop));","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","Route","withRouter","connect","CollectionsOverview","CollectionsPage","ItemPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","Shop","Component","constructor","props","state","match","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionItems","render","path","mapStateToProps","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,oDAAxB;;;AACA,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAGF,KAAK,CAACE;AADL,KAAb;AAGH;;AAGDC,EAAAA,iBAAiB,GACjB;AACI,UAAMC,aAAa,GAAIX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAvB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,eAAe,GAAG,MAAMd,+BAA+B,CAACa,QAAD,CAA7D;AACA,WAAKP,KAAL,CAAWL,iBAAX,CAA6Ba,eAA7B;AACH,KAHD;AAKH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAE,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,IAAK,EAA5C;AAA+C,QAAA,SAAS,EAAEpB;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAc,QAAA,IAAI,EAAK,GAAE,KAAKW,KAAL,CAAWC,KAAX,CAAiBQ,IAAK,gBAA/C;AAAgE,QAAA,SAAS,EAAEnB;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAK,GAAE,KAAKU,KAAL,CAAWC,KAAX,CAAiBQ,IAAK,wBAAzC;AAAkE,QAAA,SAAS,EAAElB;AAA7E;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA/B8B;;AAkCnC,MAAMmB,eAAe,GAAGV,KAAK,IAAI;AAC7B,SAAO,IAAP;AACH,CAFD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AAEpClB,EAAAA,iBAAiB,EAAGmB,cAAc,IAAID,QAAQ,CAAClB,iBAAiB,CAACmB,cAAD,CAAlB;AAFV,CAAL,CAAnC;;AAKA,eAAe1B,UAAU,CAACC,OAAO,CAAC,IAAD,EAAMuB,kBAAN,CAAP,CAAiCf,IAAjC,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\r\nimport CollectionsPage from '../Collection/CollectionsPage.component';\r\nimport ItemPage from '../Item/ItemPage.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\r\nimport WithSpinner from '../../Components/withSpinner/WithSpinner.component';\r\nclass Shop extends React.Component {\r\n   \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            match : props.match,\r\n        };  \r\n    }\r\n   \r\n\r\n    componentDidMount()\r\n    {\r\n        const collectionRef =  firestore.collection('Collections');\r\n      \r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionItems = await convertCollectionsSnapshotToMap(snapshot);\r\n            this.props.updateCollections(collectionItems);\r\n        });\r\n       \r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <Route exact path={`${this.state.match.path}`} component={CollectionsOverview}/>\r\n                <Route exact  path = {`${this.state.match.path}/:collectionId`} component={CollectionsPage}/>\r\n                <Route  path = {`${this.state.match.path}/:collectionId/:itemId`} component={ItemPage}/>\r\n        </div>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return null;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(Shop));"]},"metadata":{},"sourceType":"module"}