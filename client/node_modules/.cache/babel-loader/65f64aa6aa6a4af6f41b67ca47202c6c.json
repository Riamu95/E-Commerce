{"ast":null,"code":"import { firestore } from \"../firebase/firebase.utils\";\nexport const fetchCollectionsStart = type => ({\n  type: type.UPDATE_COLLECTION_START\n});\nexport const fetchCollectionSuccess = (type, data) => ({\n  type: type.UPDATE_COLLECTION_SUCCESS,\n  payload: data\n});\nexport const fetchCollectionFailure = (type, data) => ({\n  type: type.UPDATE_COLLECTION_FAIL,\n  error: data\n});\nexport const updateCollectionAsync = (colectionID, type, convertSnapshotToMap) => {\n  return dispatch => {\n    const collectionRef = firestore.collection(colectionID);\n    dispatch(fetchCollectionsStart(type));\n    collectionRef.get().then(async snapshot => {\n      const collections = await convertSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(type, collections));\n    }).catch(err => dispatch(fetchCollectionFailure(type, err)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/StoreData.Action.js"],"names":["firestore","fetchCollectionsStart","type","UPDATE_COLLECTION_START","fetchCollectionSuccess","data","UPDATE_COLLECTION_SUCCESS","payload","fetchCollectionFailure","UPDATE_COLLECTION_FAIL","error","updateCollectionAsync","colectionID","convertSnapshotToMap","dispatch","collectionRef","collection","get","then","snapshot","collections","catch","err"],"mappings":"AAAA,SAASA,SAAT,QAA0B,4BAA1B;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,IAAD,KAAW;AAC5CA,EAAAA,IAAI,EAAGA,IAAI,CAACC;AADgC,CAAX,CAA9B;AAKP,OAAO,MAAMC,sBAAsB,GAAG,CAACF,IAAD,EAAOG,IAAP,MAAiB;AACnDH,EAAAA,IAAI,EAAEA,IAAI,CAACI,yBADwC;AAEnDC,EAAAA,OAAO,EAAGF;AAFyC,CAAjB,CAA/B;AAKP,OAAO,MAAMG,sBAAsB,GAAG,CAACN,IAAD,EAAOG,IAAP,MAAiB;AACnDH,EAAAA,IAAI,EAAEA,IAAI,CAACO,sBADwC;AAEnDC,EAAAA,KAAK,EAAGL;AAF2C,CAAjB,CAA/B;AAMP,OAAO,MAAMM,qBAAqB,GAAG,CAACC,WAAD,EAAcV,IAAd,EAAoBW,oBAApB,KAA6C;AAE9E,SAAQC,QAAD,IAAc;AAEjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqBJ,WAArB,CAAtB;AACAE,IAAAA,QAAQ,CAACb,qBAAqB,CAACC,IAAD,CAAtB,CAAR;AAEAa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAoB;AACzC,YAAMC,WAAW,GAAG,MAAMP,oBAAoB,CAACM,QAAD,CAA9C;AACAL,MAAAA,QAAQ,CAACV,sBAAsB,CAACF,IAAD,EAAMkB,WAAN,CAAvB,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAIR,QAAQ,CAACN,sBAAsB,CAACN,IAAD,EAAMoB,GAAN,CAAvB,CAHxB;AAIH,GATD;AAUH,CAZM","sourcesContent":["import { firestore } from \"../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = (type) => ({\r\n    type : type.UPDATE_COLLECTION_START\r\n});\r\n\r\n\r\nexport const fetchCollectionSuccess = (type, data) => ({\r\n    type: type.UPDATE_COLLECTION_SUCCESS,\r\n    payload : data\r\n});\r\n\r\nexport const fetchCollectionFailure = (type, data) => ({\r\n    type: type.UPDATE_COLLECTION_FAIL,\r\n    error : data\r\n});\r\n\r\n\r\nexport const updateCollectionAsync = (colectionID, type, convertSnapshotToMap) => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        const collectionRef = firestore.collection(colectionID);\r\n        dispatch(fetchCollectionsStart(type));\r\n\r\n        collectionRef.get().then(async (snapshot) => {\r\n            const collections = await convertSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionSuccess(type,collections));\r\n        }).catch(err => dispatch(fetchCollectionFailure(type,err)));\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}