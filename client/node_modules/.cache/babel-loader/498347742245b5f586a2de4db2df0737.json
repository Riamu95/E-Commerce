{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Shop from './Pages/Shop/Shop.component';\nimport Header from './Components/Header/Header.component';\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from './Redux/User/user.selector';\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\nimport DirectoryComponent from './Components/Directory/Directory.component';\nimport { shopCollections } from './Redux/Shop/shop.selector';\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\nimport { convertCollectionTypeSnapshotToMap } from './firebase/firebase.utils';\nimport { collectionUpdate } from './Redux/StoreData.Action';\nimport { collectionActionTypes } from './Redux/Collections/Collection.ActionTypes';\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\n_c = DirectorySpinnerComponent;\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      checkIsUserAuthenticated\n    } = this.props;\n    checkIsUserAuthenticated();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props.isFetching;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: props => /*#__PURE__*/_jsxDEV(DirectorySpinnerComponent, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 82\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 109\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  //collections : shopCollections(state),\n  isFetching: selectIsFetching(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // setCollectionTypes : () => dispatch(updateCollectionAsync('CollectionTypes',collectionActionTypes,convertCollectionTypeSnapshotToMap)),\n  checkIsUserAuthenticated: () => dispatch(IsUserAuthenticatedStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectorySpinnerComponent\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/App.js"],"names":["Component","Switch","Route","Redirect","Shop","Header","SignInAndSignUp","connect","selectCurrentUser","CheckoutPage","DirectoryComponent","shopCollections","selectIsFetching","convertCollectionTypeSnapshotToMap","collectionUpdate","collectionActionTypes","WithSpinner","IsUserAuthenticatedStart","DirectorySpinnerComponent","App","componentDidMount","checkIsUserAuthenticated","props","render","loading","isFetching","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAQC,IAAR,MAAkB,6BAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,QAAiC,yCAAjC;AACA,SAASC,kCAAT,QAAkD,2BAAlD;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,qBAAT,QAAsC,4CAAtC;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,SAASC,wBAAT,QAAyC,2BAAzC;;AACA,MAAMC,yBAAyB,GAAGF,WAAW,CAACN,kBAAD,CAA7C;KAAMQ,yB;;AAEN,MAAOC,GAAP,SAAmBnB,SAAnB,CACA;AAEEoB,EAAAA,iBAAiB,GACjB;AACG,UAAM;AAAEC,MAAAA;AAAF,QAA+B,KAAKC,KAA1C;AACAD,IAAAA,wBAAwB;AAC1B;;AACDE,EAAAA,MAAM,GACN;AACE,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKF,KAAL,CAAWG,UAA/B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAGH,KAAD,iBAAW,QAAC,yBAAD;AAA2B,YAAA,SAAS,EAAEE,OAAtC;AAAA,eAAmDF;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,SAAS,EAAElB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,SAAS,EAAEA;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,MAAM,EAAK,MAAM,KAAKkB,KAAL,CAAWI,WAAX,gBAA0B,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAA1B,gBAAqD,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEjB;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAtBH;;AA0BA,MAAMkB,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,WAAW,EAAGlB,iBAAiB,CAACoB,KAAD,CADC;AAEhC;AACAH,EAAAA,UAAU,EAAGb,gBAAgB,CAACgB,KAAD;AAHG,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvC;AACCT,EAAAA,wBAAwB,EAAG,MAAOS,QAAQ,CAACb,wBAAwB,EAAzB;AAFJ,CAAL,CAAnC;;AAKA,eAAgBV,OAAO,CAACoB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,GAA5C,CAAhB","sourcesContent":["import { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport  Shop from './Pages/Shop/Shop.component';\r\nimport Header from './Components/Header/Header.component';\r\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from './Redux/User/user.selector';\r\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\r\nimport DirectoryComponent from './Components/Directory/Directory.component';\r\nimport { shopCollections } from './Redux/Shop/shop.selector';\r\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\r\nimport { convertCollectionTypeSnapshotToMap} from './firebase/firebase.utils';\r\nimport { collectionUpdate } from './Redux/StoreData.Action';\r\nimport { collectionActionTypes } from './Redux/Collections/Collection.ActionTypes';\r\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\r\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\r\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\r\n\r\nclass  App extends Component\r\n{\r\n\r\n  componentDidMount()\r\n  {\r\n     const { checkIsUserAuthenticated } = this.props;\r\n     checkIsUserAuthenticated();\r\n  }\r\n  render()\r\n  {\r\n    const { loading } = this.props.isFetching;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={loading} {...props}/>}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => this.props.currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  //collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n // setCollectionTypes : () => dispatch(updateCollectionAsync('CollectionTypes',collectionActionTypes,convertCollectionTypeSnapshotToMap)),\r\n  checkIsUserAuthenticated : ( ) => dispatch(IsUserAuthenticatedStart())\r\n});\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}