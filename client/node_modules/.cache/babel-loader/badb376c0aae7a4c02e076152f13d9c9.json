{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Pages\\\\Shop\\\\Shop.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\nimport CollectionsPage from '../Collection/CollectionsPage.component';\nimport ItemPage from '../Item/ItemPage.component';\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\nimport { getIsLoading } from '../../Redux/Shop/shop.selector';\nimport { shopUpdateStart } from '../../Redux/Shop/ShopActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewSpinner;\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionsPageSpinner;\nconst ItemPageSpinner = WithSpinner(ItemPage);\n_c3 = ItemPageSpinner;\n\nconst Shop = ({\n  updateCollections\n}) => {\n  _s();\n\n  useEffect(() => {\n    updateCollections();\n  });\n  const {\n    isLoading,\n    match\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewSpinner, {\n        isLoading: isLoading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionsPageSpinner, {\n        isLoading: isLoading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:collectionId/:itemId`,\n      render: props => /*#__PURE__*/_jsxDEV(ItemPageSpinner, {\n        isLoading: isLoading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Shop, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c4 = Shop;\n\nconst mapStateToProps = state => ({\n  isLoading: getIsLoading(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: () => dispatch(shopUpdateStart())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Shop));\n/*\r\nclass  Shop extends React.Component  {\r\n   \r\n   componentDidMount()\r\n   {\r\n       this.props.updateCollections();\r\n   }\r\n   \r\n   render()\r\n   {\r\n        const { isLoading , match} = this.props;\r\n        return(\r\n                <div>\r\n                    <Route  exact path={`${match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={isLoading} {...props} />}/>\r\n                    <Route exact  path = {`${match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={isLoading} {...props} />}/>\r\n                    <Route   path = {`${match.path}/:collectionId/:itemId`} render={ (props) => <ItemPageSpinner isLoading={isLoading} {...props}/>}/> \r\n            </div>\r\n        );\r\n   }    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading : getIsLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : () => dispatch(shopUpdateStart())\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));\r\n*/\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CollectionsOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageSpinner\");\n$RefreshReg$(_c3, \"ItemPageSpinner\");\n$RefreshReg$(_c4, \"Shop\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Pages/Shop/Shop.component.js"],"names":["React","useEffect","Route","withRouter","connect","CollectionsOverview","CollectionsPage","ItemPage","WithSpinner","getIsLoading","shopUpdateStart","CollectionsOverviewSpinner","CollectionsPageSpinner","ItemPageSpinner","Shop","updateCollections","isLoading","match","props","path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,WAAP,MAAwB,oDAAxB;AAEA,SAASC,YAAT,QAA4B,gCAA5B;AACA,SAASC,eAAT,QAAgC,8BAAhC;;AAIA,MAAMC,0BAA0B,GAAGH,WAAW,CAACH,mBAAD,CAA9C;KAAMM,0B;AACN,MAAMC,sBAAsB,GAAGJ,WAAW,CAACF,eAAD,CAA1C;MAAMM,sB;AACN,MAAMC,eAAe,GAAGL,WAAW,CAACD,QAAD,CAAnC;MAAMM,e;;AAIN,MAAOC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0B;AAAA;;AAEpCd,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,iBAAiB;AACpB,GAFQ,CAAT;AAIA,QAAM;AAAEC,IAAAA,SAAF;AAAcC,IAAAA;AAAd,MAAuB,KAAKC,KAAlC;AACA,sBACQ;AAAA,4BACI,QAAC,KAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAlC;AAAqC,MAAA,MAAM,EAAMD,KAAD,iBAAW,QAAC,0BAAD;AAA6B,QAAA,SAAS,EAAEF,SAAxC;AAAA,WAAuDE;AAAvD;AAAA;AAAA;AAAA;AAAA;AAA3D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAK,GAAED,KAAK,CAACE,IAAK,gBAApC;AAAsD,MAAA,MAAM,EAAMD,KAAD,iBAAW,QAAC,sBAAD;AAAyB,QAAA,SAAS,EAAEF,SAApC;AAAA,WAAmDE;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAS,MAAA,IAAI,EAAK,GAAED,KAAK,CAACE,IAAK,wBAA/B;AAAwD,MAAA,MAAM,EAAID,KAAD,iBAAW,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEF,SAA5B;AAAA,WAA2CE;AAA3C;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAQF,CAfF;;GAAOJ,I;;MAAAA,I;;AAiBN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,SAAS,EAAGP,YAAY,CAACY,KAAD;AADQ,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,iBAAiB,EAAG,MAAMQ,QAAQ,CAACb,eAAe,EAAhB;AADE,CAAL,CAAnC;;AAIA,eAAeP,UAAU,CAACC,OAAO,CAACgB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CR,IAA5C,CAAD,CAAzB;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { Route, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../Components/CollectionsOverview/CollectionsOverview.component';\r\nimport CollectionsPage from '../Collection/CollectionsPage.component';\r\nimport ItemPage from '../Item/ItemPage.component';\r\n\r\nimport WithSpinner from '../../Components/WithSpinner/WithSpinner.component';\r\n\r\nimport { getIsLoading} from '../../Redux/Shop/shop.selector';\r\nimport { shopUpdateStart } from '../../Redux/Shop/ShopActions';\r\n\r\n\r\n\r\nconst CollectionsOverviewSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageSpinner = WithSpinner(CollectionsPage);\r\nconst ItemPageSpinner = WithSpinner(ItemPage);\r\n\r\n\r\n\r\nconst  Shop = ({updateCollections}) =>  {\r\n   \r\n    useEffect(() => {\r\n        updateCollections();\r\n    }, );\r\n    \r\n    const { isLoading , match} = this.props;\r\n    return(\r\n            <div>\r\n                <Route  exact path={`${match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={isLoading} {...props} />}/>\r\n                <Route exact  path = {`${match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={isLoading} {...props} />}/>\r\n                <Route   path = {`${match.path}/:collectionId/:itemId`} render={ (props) => <ItemPageSpinner isLoading={isLoading} {...props}/>}/> \r\n        </div>\r\n    );\r\n  \r\n };\r\n \r\n const mapStateToProps = (state) => ({\r\n     isLoading : getIsLoading(state)\r\n });\r\n \r\n const mapDispatchToProps = dispatch => ({\r\n     updateCollections : () => dispatch(shopUpdateStart())\r\n });\r\n \r\n export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));\r\n\r\n/*\r\nclass  Shop extends React.Component  {\r\n   \r\n   componentDidMount()\r\n   {\r\n       this.props.updateCollections();\r\n   }\r\n   \r\n   render()\r\n   {\r\n        const { isLoading , match} = this.props;\r\n        return(\r\n                <div>\r\n                    <Route  exact path={`${match.path}`} render = { (props) => <CollectionsOverviewSpinner  isLoading={isLoading} {...props} />}/>\r\n                    <Route exact  path = {`${match.path}/:collectionId`}  render = { (props) => <CollectionsPageSpinner  isLoading={isLoading} {...props} />}/>\r\n                    <Route   path = {`${match.path}/:collectionId/:itemId`} render={ (props) => <ItemPageSpinner isLoading={isLoading} {...props}/>}/> \r\n            </div>\r\n        );\r\n   }    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading : getIsLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections : () => dispatch(shopUpdateStart())\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Shop));\r\n*/"]},"metadata":{},"sourceType":"module"}