{"ast":null,"code":"import React from 'react';\nimport CollectionItem from '../CollectionItem/CollectionItem.component';\nimport { useSelector } from 'react-redux';\nimport { withRouter, useParams } from 'react-router-dom';\nimport { selectCollectionItems } from '../../Redux/Shop/shop.selector';\nimport { ReactComponent as LeftArrowLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Assets/leftArrow.svg\";\nimport { ReactComponent as RightArrowLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Assets/rightArrow.svg\";\nimport { CollectionPreviewContainer, TitleContainer, PreviewContainer, LeftArrowContainer, RightArrowContainer } from './Collection-Preview.styles';\nimport WithSpinner from '../WithSpinner/WithSpinner.component';\nexport { LeftArrowLogo, RightArrowLogo };\n/*\r\nclass  ColllectionPreview extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            startIndex : 0,\r\n            endIndex : 3,\r\n            maxItems :  props.shopItems.items?  props.shopItems.items.length -1 : 0,\r\n            previewCount  : 4,\r\n            title : this.props.collectionCategory.title\r\n        };\r\n    }\r\n\r\n    const { title } = useParams();\r\n\r\n    const shopItems = useSelector((title, state) => selectCollectionItems(ownProps.collectionCategory.title)(state));\r\n\r\n    onArrowClick = (direction) => {\r\n        //max amount of items to preview on screen per category\r\n        const previewCount = this.state.previewCount;\r\n        //caluclate offset from array boundary to closest index based on direction\r\n        const diff = direction  === 'right' ? (this.state.maxItems - this.state.endIndex) :  ((0 - this.state.startIndex) * -1);\r\n        //if at array boundary do nothing\r\n        if(diff === 0)\r\n            return null;\r\n            //if array boundary is closer than the max amount 0of items we can display on screen\r\n            //move furthest index to render newest item\r\n            //move closest index to render the last item\r\n            diff <= previewCount ?\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - diff}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + diff})\r\n            :\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - previewCount}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + previewCount})\r\n\r\n    };\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <CollectionPreviewContainer> \r\n                <TitleContainer  onClick={ () => this.props.history.push(`${this.props.match.url}/${this.state.title}`)}> {this.state.title.toUpperCase()}</TitleContainer>\r\n                <PreviewContainer>\r\n                    <LeftArrowContainer onClick={() => this.onArrowClick('left')}/>\r\n                   {                                          //render only the indexs we have chosen max of 4\r\n                        this.props.shopItems.items.filter((item, idx) => (idx >= this.state.startIndex && idx <= this.state.endIndex) )\r\n                        .map((item) => (\r\n                            <CollectionItem key={item.id} {...item} /> \r\n                        ))\r\n                    }\r\n                    <RightArrowContainer onClick={() => this.onArrowClick('right')}/>\r\n                </PreviewContainer>\r\n            </CollectionPreviewContainer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(ColllectionPreview);\r\n*/","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Components/Collection-Preview/CollectionPreview.component.js"],"names":["React","CollectionItem","useSelector","withRouter","useParams","selectCollectionItems","CollectionPreviewContainer","TitleContainer","PreviewContainer","LeftArrowContainer","RightArrowContainer","WithSpinner","LeftArrowLogo","RightArrowLogo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAAQC,qBAAR,QAAoC,gCAApC;;;AAGA,SAASC,0BAAT,EAAqCC,cAArC,EAAsDC,gBAAtD,EAAwEC,kBAAxE,EAA4FC,mBAA5F,QAAsH,6BAAtH;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAAUC,aAAV,EAAyBC,cAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport CollectionItem from '../CollectionItem/CollectionItem.component';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter, useParams } from 'react-router-dom'; \r\nimport {selectCollectionItems} from '../../Redux/Shop/shop.selector';\r\nimport { ReactComponent as LeftArrowLogo} from '../../Assets/leftArrow.svg';\r\nimport { ReactComponent as RightArrowLogo} from '../../Assets/rightArrow.svg';\r\nimport { CollectionPreviewContainer, TitleContainer , PreviewContainer, LeftArrowContainer, RightArrowContainer} from './Collection-Preview.styles';\r\nimport WithSpinner from '../WithSpinner/WithSpinner.component';\r\nexport  { LeftArrowLogo, RightArrowLogo };\r\n/*\r\nclass  ColllectionPreview extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            startIndex : 0,\r\n            endIndex : 3,\r\n            maxItems :  props.shopItems.items?  props.shopItems.items.length -1 : 0,\r\n            previewCount  : 4,\r\n            title : this.props.collectionCategory.title\r\n        };\r\n    }\r\n\r\n    const { title } = useParams();\r\n\r\n    const shopItems = useSelector((title, state) => selectCollectionItems(ownProps.collectionCategory.title)(state));\r\n\r\n    onArrowClick = (direction) => {\r\n        //max amount of items to preview on screen per category\r\n        const previewCount = this.state.previewCount;\r\n        //caluclate offset from array boundary to closest index based on direction\r\n        const diff = direction  === 'right' ? (this.state.maxItems - this.state.endIndex) :  ((0 - this.state.startIndex) * -1);\r\n        //if at array boundary do nothing\r\n        if(diff === 0)\r\n            return null;\r\n            //if array boundary is closer than the max amount 0of items we can display on screen\r\n            //move furthest index to render newest item\r\n            //move closest index to render the last item\r\n            diff <= previewCount ?\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - diff}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + diff})\r\n            :\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - previewCount}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + previewCount})\r\n\r\n    };\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <CollectionPreviewContainer> \r\n                <TitleContainer  onClick={ () => this.props.history.push(`${this.props.match.url}/${this.state.title}`)}> {this.state.title.toUpperCase()}</TitleContainer>\r\n                <PreviewContainer>\r\n                    <LeftArrowContainer onClick={() => this.onArrowClick('left')}/>\r\n                   {                                          //render only the indexs we have chosen max of 4\r\n                        this.props.shopItems.items.filter((item, idx) => (idx >= this.state.startIndex && idx <= this.state.endIndex) )\r\n                        .map((item) => (\r\n                            <CollectionItem key={item.id} {...item} /> \r\n                        ))\r\n                    }\r\n                    <RightArrowContainer onClick={() => this.onArrowClick('right')}/>\r\n                </PreviewContainer>\r\n            </CollectionPreviewContainer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(ColllectionPreview);\r\n*/"]},"metadata":{},"sourceType":"module"}