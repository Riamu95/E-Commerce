{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTION,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.UPDATE_COLLECTION_START\n});\nexport const fetchCollectionSuccess = data => ({\n  type: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\n  payload: data\n});\nexport const fetchCollectionFailure = data => ({\n  type: ShopActionTypes.UPDATE_COLLECTION_FAIL,\n  error: data\n});\nexport const updateCollectionAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('Collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collections = await convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collections));\n    }).catch(err => dispatch(fetchCollectionFailure(err)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTION","payload","fetchCollectionsStart","UPDATE_COLLECTION_START","fetchCollectionSuccess","data","UPDATE_COLLECTION_SUCCESS","fetchCollectionFailure","UPDATE_COLLECTION_FAIL","error","updateCollectionAsync","dispatch","collectionRef","collection","get","then","snapshot","collections","catch","err"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AAClDC,EAAAA,IAAI,EAAIL,eAAe,CAACM,iBAD0B;AAElDC,EAAAA,OAAO,EAAGH;AAFwC,CAArB,CAA1B;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAGL,eAAe,CAACS;AADiB,CAAP,CAA9B;AAKP,OAAO,MAAMC,sBAAsB,GAAIC,IAAD,KAAW;AAC7CN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADuB;AAE7CL,EAAAA,OAAO,EAAGI;AAFmC,CAAX,CAA/B;AAKP,OAAO,MAAME,sBAAsB,GAAIF,IAAD,KAAW;AAC7CN,EAAAA,IAAI,EAAEL,eAAe,CAACc,sBADuB;AAE7CC,EAAAA,KAAK,EAAGJ;AAFqC,CAAX,CAA/B;AAMP,OAAO,MAAMK,qBAAqB,GAAG,MAAM;AAEvC,SAAQC,QAAD,IAAc;AAEjB,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AAEAU,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAoB;AACzC,YAAMC,WAAW,GAAG,MAAMrB,+BAA+B,CAACoB,QAAD,CAAzD;AACAL,MAAAA,QAAQ,CAACP,sBAAsB,CAACa,WAAD,CAAvB,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAIR,QAAQ,CAACJ,sBAAsB,CAACY,GAAD,CAAvB,CAHxB;AAIH,GATD;AAUH,CAZM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nexport const updateCollections = (collectionsMap) => ({\r\n    type :  ShopActionTypes.UPDATE_COLLECTION,\r\n    payload : collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type : ShopActionTypes.UPDATE_COLLECTION_START\r\n});\r\n\r\n\r\nexport const fetchCollectionSuccess = (data) => ({\r\n    type: ShopActionTypes.UPDATE_COLLECTION_SUCCESS,\r\n    payload : data\r\n});\r\n\r\nexport const fetchCollectionFailure = (data) => ({\r\n    type: ShopActionTypes.UPDATE_COLLECTION_FAIL,\r\n    error : data\r\n});\r\n\r\n\r\nexport const updateCollectionAsync = () => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        const collectionRef = firestore.collection('Collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then(async (snapshot) => {\r\n            const collections = await convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionSuccess(collections));\r\n        }).catch(err => dispatch(fetchCollectionFailure(err)));\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}