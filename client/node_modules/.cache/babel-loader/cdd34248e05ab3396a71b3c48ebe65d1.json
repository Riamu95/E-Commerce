{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst shopCollection = state => state.shopCollection;\n\nexport const shopCollections = createSelector([shopCollection], data => data.collections);\nexport const selectCollectionItems = category => createSelector([shopCollections], collections => {\n  if (collections) {\n    if (collections[category]) {\n      return Object.assign({}, collections[category]);\n    }\n  } else {\n    return {};\n  }\n});\nexport const getItem = (categoryID, itemID) => createSelector([selectCollectionItems(categoryID)], collection => collection.items.filter(item => item.id === itemID));\nexport const getIsFetching = () => createSelector([shopCollection], shopCollection => shopCollection.isFetching);","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/shop.selector.js"],"names":["createSelector","shopCollection","state","shopCollections","data","collections","selectCollectionItems","category","Object","assign","getItem","categoryID","itemID","collection","items","filter","item","id","getIsFetching","isFetching"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAIA,KAAK,CAACD,cAAtC;;AAEA,OAAO,MAAME,eAAe,GAAGH,cAAc,CAAC,CAACC,cAAD,CAAD,EAAoBG,IAAD,IAAUA,IAAI,CAACC,WAAlC,CAAtC;AAGP,OAAO,MAAMC,qBAAqB,GAAGC,QAAQ,IACzCP,cAAc,CAAC,CAACG,eAAD,CAAD,EAAoBE,WAAW,IAAK;AAE/C,MAAGA,WAAH,EACA;AACK,QAAGA,WAAW,CAACE,QAAD,CAAd,EACA;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,WAAW,CAACE,QAAD,CAA7B,CAAP;AACH;AACJ,GANF,MAQC;AACI,WAAO,EAAP;AACH;AACR,CAbiB,CADX;AAgBP,OAAO,MAAMG,OAAO,GAAG,CAACC,UAAD,EAAaC,MAAb,KAAwBZ,cAAc,CAAC,CAACM,qBAAqB,CAACK,UAAD,CAAtB,CAAD,EAAsCE,UAAU,IAAIA,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAA7C,CAApD,CAAtD;AAEP,OAAO,MAAMM,aAAa,GAAG,MAAMlB,cAAc,CAAC,CAACC,cAAD,CAAD,EAAoBA,cAAD,IAAqBA,cAAc,CAACkB,UAAvD,CAA1C","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst shopCollection = state => state.shopCollection;\r\n\r\nexport const shopCollections = createSelector([shopCollection], (data) => data.collections);\r\n\r\n\r\nexport const selectCollectionItems = category => \r\n    createSelector([shopCollections], collections =>  {\r\n\r\n       if(collections)\r\n       {\r\n            if(collections[category])\r\n            {\r\n                return Object.assign({}, collections[category]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return {};\r\n        }\r\n});\r\n\r\nexport const getItem = (categoryID, itemID) => createSelector([selectCollectionItems(categoryID)], collection => collection.items.filter( item => item.id === itemID));\r\n\r\nexport const getIsFetching = () => createSelector([shopCollection], (shopCollection) =>  shopCollection.isFetching);"]},"metadata":{},"sourceType":"module"}