{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Components\\\\SignIn\\\\SignIn.component.js\";\nimport React from 'react';\nimport './SignIn.style.scss';\nimport FormInput from '../FormInput/FormInput.component';\nimport CustomButton from \"../Button/Button.component\";\nimport { GoogleStartSignIn, EmailStartSignIn } from '../../Redux/User/user-actions';\nimport { connect } from 'react-redux';\nimport { clearCart } from '../../Redux/Cart/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        EmailSignIn\n      } = this.props;\n      EmailSignIn({\n        email,\n        password\n      });\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I Already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          label: \"Email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          reqiured: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            children: \"Sign In\",\n            type: \"submit\",\n            isGoogleSignIn: null,\n            onClick: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            children: \"Sign In With Google\",\n            isGoogleSignIn: true,\n            onClick: this.props.GoogleSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  GoogleSignIn: () => dispatch(GoogleStartSignIn()),\n  EmailSignIn: data => dispatch(EmailStartSignIn(data)),\n  ClearCart: () => dispatch()\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Components/SignIn/SignIn.component.js"],"names":["React","FormInput","CustomButton","GoogleStartSignIn","EmailStartSignIn","connect","clearCart","SignIn","Component","constructor","handleSubmit","event","preventDefault","email","password","state","EmailSignIn","props","setState","handleChange","e","value","name","target","render","GoogleSignIn","mapDispatchToProps","dispatch","data","ClearCart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './SignIn.style.scss';\r\nimport FormInput from '../FormInput/FormInput.component';\r\nimport CustomButton from \"../Button/Button.component\";\r\nimport { GoogleStartSignIn, EmailStartSignIn } from '../../Redux/User/user-actions';\r\nimport { connect } from 'react-redux';\r\nimport { clearCart } from '../../Redux/Cart/cart-actions';\r\n\r\nclass SignIn extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            email : '',\r\n            password : ''\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event =>\r\n    {   \r\n        event.preventDefault();\r\n        const { email , password } = this.state;\r\n        const { EmailSignIn } = this.props;\r\n        EmailSignIn({ email, password});\r\n        this.setState({email : '', password : ''});\r\n    }\r\n\r\n    handleChange = e =>\r\n    {\r\n        const { value, name } = e.target;\r\n        this.setState({ [name] : value });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"sign-in\">\r\n                <h2>I Already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <FormInput \r\n                        name='email' \r\n                        type='email' \r\n                        label='Email'  \r\n                        value={this.state.email} \r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                    \r\n                    <FormInput \r\n                        name='password' \r\n                        type='password' \r\n                        label='Password' \r\n                        value={this.state.password} \r\n                        onChange={this.handleChange} \r\n                        reqiured \r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton children ='Sign In' type=\"submit\" isGoogleSignIn={null} onClick={ this.handleSubmit }/>\r\n                        <CustomButton type='button' children ='Sign In With Google' isGoogleSignIn={true} onClick={ this.props.GoogleSignIn }/>\r\n                     </div>\r\n                </form>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => \r\n({\r\n    GoogleSignIn :  () => dispatch(GoogleStartSignIn()),\r\n    EmailSignIn :  (data) => dispatch(EmailStartSignIn(data)),\r\n    ClearCart : () => dispatch()\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}