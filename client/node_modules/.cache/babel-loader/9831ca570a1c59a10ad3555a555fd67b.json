{"ast":null,"code":"import { all, call, takeLatest, put } from \"@redux-saga/core/effects\";\nimport { shopActionTypes } from './ShopActionTypes';\nimport { shopUpdateStart, shopUpdateSuccess, shopUpdateFail } from './ShopActions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nfunction* onItemsUpdate() {\n  put(shopUpdateStart());\n  const collectionRef = yield firestore.collection('Collections');\n  const snap = yield collectionRef.get();\n}\n\n;\n\nfunction* itemsStart() {\n  yield takeLatest(shopActionTypes.ON_ITEMS_UPDATE, onItemsUpdate);\n}\n\n;\nexport function* shopSaga() {\n  yield all([call(itemsStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Redux/Shop/ShopSagas.js"],"names":["all","call","takeLatest","put","shopActionTypes","shopUpdateStart","shopUpdateSuccess","shopUpdateFail","firestore","convertCollectionsSnapshotToMap","onItemsUpdate","collectionRef","collection","snap","get","itemsStart","ON_ITEMS_UPDATE","shopSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,0BAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,cAA7C,QAAkE,eAAlE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,UAAUC,aAAV,GACA;AACIP,EAAAA,GAAG,CAACE,eAAe,EAAhB,CAAH;AACA,QAAMM,aAAa,GAAG,MAAMH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAnB;AAEH;;AAAA;;AAED,UAAUC,UAAV,GACA;AACI,QAAMb,UAAU,CAACE,eAAe,CAACY,eAAjB,EAAkCN,aAAlC,CAAhB;AACH;;AAAA;AAED,OAAO,UAAUO,QAAV,GAAqB;AACtB,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACc,UAAD,CAAL,CAAD,CAAT;AACL;AAAA","sourcesContent":["import { all, call, takeLatest, put } from \"@redux-saga/core/effects\";\r\nimport { shopActionTypes } from './ShopActionTypes';\r\nimport { shopUpdateStart, shopUpdateSuccess, shopUpdateFail} from './ShopActions';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nfunction* onItemsUpdate()\r\n{\r\n    put(shopUpdateStart());\r\n    const collectionRef = yield firestore.collection('Collections');\r\n    const snap = yield collectionRef.get();\r\n\r\n};\r\n\r\nfunction* itemsStart()\r\n{\r\n    yield takeLatest(shopActionTypes.ON_ITEMS_UPDATE, onItemsUpdate);\r\n};\r\n\r\nexport function* shopSaga() {\r\n      yield all([call(itemsStart)])\r\n};"]},"metadata":{},"sourceType":"module"}