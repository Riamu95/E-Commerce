{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Shop from './Pages/Shop/Shop.component';\nimport Header from './Components/Header/Header.component';\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentUser } from './Redux/User/user.selector';\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\nimport DirectoryComponent from './Components/Directory/Directory.component';\nimport { shopCollections } from './Redux/Shop/shop.selector';\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\nimport { fetchCollectionsStart } from './Redux/Collections/CollectionActions';\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\n_c = DirectorySpinnerComponent;\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(IsUserAuthenticatedStart());\n    dispatch(fetchCollectionsStart());\n  }, [IsUserAuthenticatedStart]);\n  const currentUser = useSelector(state => selectCurrentUser(state));\n  const collections = useSelector(state => shopCollections(state));\n  const isFetching = useSelector(state => selectIsFetching(state));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => /*#__PURE__*/_jsxDEV(DirectorySpinnerComponent, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: Shop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        component: Shop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 71\n        }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: CheckoutPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n/*\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCollectionTypes : () => dispatch(fetchCollectionsStart()),\r\n  checkIsUserAuthenticated : () => dispatch(IsUserAuthenticatedStart())\r\n});\r\n*/\n\n\n_s(App, \"3Vqhhv0bonXub3mwGaDODKo9LNQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c2 = App;\nexport default App; //export default  connect(mapStateToProps,mapDispatchToProps)(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DirectorySpinnerComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/App.js"],"names":["useEffect","Switch","Route","Redirect","Shop","Header","SignInAndSignUp","useSelector","useDispatch","selectCurrentUser","CheckoutPage","DirectoryComponent","shopCollections","selectIsFetching","fetchCollectionsStart","WithSpinner","IsUserAuthenticatedStart","DirectorySpinnerComponent","App","dispatch","currentUser","state","collections","isFetching","props"],"mappings":"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","sourcesContent":["import {useEffect} from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport  Shop from './Pages/Shop/Shop.component';\r\nimport Header from './Components/Header/Header.component';\r\nimport SignInAndSignUp from './Pages/SignInAndSignUp/SignInAndSignUp.component';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from './Redux/User/user.selector';\r\nimport CheckoutPage from './Pages/Checkout/Checkout.component';\r\nimport DirectoryComponent from './Components/Directory/Directory.component';\r\nimport { shopCollections } from './Redux/Shop/shop.selector';\r\nimport { selectIsFetching } from './Redux/Collections/collection.selector';\r\nimport { fetchCollectionsStart } from './Redux/Collections/CollectionActions';\r\nimport WithSpinner from './Components/WithSpinner/WithSpinner.component';\r\nimport { IsUserAuthenticatedStart } from './Redux/User/user-actions';\r\n\r\nconst DirectorySpinnerComponent = WithSpinner(DirectoryComponent);\r\n\r\n\r\nconst App = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(IsUserAuthenticatedStart());\r\n    dispatch(fetchCollectionsStart());\r\n  },[IsUserAuthenticatedStart]);\r\n\r\n    const currentUser = useSelector((state) => selectCurrentUser(state));\r\n    const collections = useSelector((state) => shopCollections(state));\r\n    const isFetching = useSelector((state) => selectIsFetching(state));\r\n\r\n   \r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' render={(props) => <DirectorySpinnerComponent isLoading={isFetching} {...props} />}/>\r\n          <Route  path='/shop' component={Shop}/>\r\n          <Route exact path='/contact' component={Shop}/>\r\n          <Route exact path='/signin' render = { () => currentUser ? (<Redirect to='/shop'/>) : (<SignInAndSignUp/>) }/>\r\n          <Route exact path='/checkout' component={CheckoutPage}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n};\r\n\r\n/*\r\nconst mapStateToProps = state => ({\r\n  currentUser : selectCurrentUser(state),\r\n  collections : shopCollections(state),\r\n  isFetching : selectIsFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCollectionTypes : () => dispatch(fetchCollectionsStart()),\r\n  checkIsUserAuthenticated : () => dispatch(IsUserAuthenticatedStart())\r\n});\r\n*/\r\n\r\nexport default App;\r\n//export default  connect(mapStateToProps,mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}