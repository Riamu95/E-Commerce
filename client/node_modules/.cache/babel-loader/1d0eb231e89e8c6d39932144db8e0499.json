{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Predator\\\\Documents\\\\E-Commerce\\\\src\\\\Components\\\\Collection-Preview\\\\CollectionPreview.component.js\";\nimport React from 'react';\nimport CollectionItem from '../CollectionItem/CollectionItem.component';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { selectCollectionItems } from '../../Redux/Shop/shop.selector';\nimport { ReactComponent as LeftArrowLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Assets/leftArrow.svg\";\nimport { ReactComponent as RightArrowLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Assets/rightArrow.svg\";\nimport { CollectionPreviewContainer, TitleContainer, PreviewContainer, LeftArrowContainer, RightArrowContainer } from './Collection-Preview.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { LeftArrowLogo, RightArrowLogo };\n\nclass ColllectionPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onArrowClick = direction => {\n      //max amount of items to preview on screen per category\n      const previewCount = this.state.previewCount; //caluclate offset from array boundary to closest index based on direction\n\n      const diff = direction === 'right' ? this.state.maxItems - this.state.endIndex : (0 - this.state.startIndex) * -1; //if at array boundary do nothing\n\n      if (diff === 0) return null; //if array boundary is closer than the max amount 0of items we can display on screen\n      //move furthest index to render newest item\n      //move closest index to render the last item\n\n      diff <= previewCount ? direction === 'left' ? this.setState({\n        endIndex: this.state.startIndex - 1,\n        startIndex: this.state.startIndex - diff\n      }) : this.setState({\n        startIndex: this.state.endIndex + 1,\n        endIndex: this.state.endIndex + diff\n      }) : direction === 'left' ? this.setState({\n        endIndex: this.state.startIndex - 1,\n        startIndex: this.state.startIndex - previewCount\n      }) : this.setState({\n        startIndex: this.state.endIndex + 1,\n        endIndex: this.state.endIndex + previewCount\n      });\n    };\n\n    this.state = {\n      startIndex: 0,\n      endIndex: 3,\n      maxItems: props.shopItems.items ? props.shopItems.items.length - 1 : 0,\n      // items : this.props.shopItems.items ? this.props.shopItems.items : [],\n      previewCount: 4,\n      title: this.props.collectionCategory.title\n    };\n  }\n\n  render() {\n    console.log('shop items ', this.props.shopItems.items);\n    console.log('state items ', this.state.items);\n    return /*#__PURE__*/_jsxDEV(CollectionPreviewContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        onClick: () => this.props.history.push(`${this.props.match.url}/${this.state.title}`),\n        children: [\" \", this.state.title.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PreviewContainer, {\n        children: [/*#__PURE__*/_jsxDEV(LeftArrowContainer, {\n          onClick: () => this.onArrowClick('left')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), //render only the indexs we have chosen max of 4\n        this.props.shopItems.items.filter((item, idx) => idx >= this.state.startIndex && idx <= this.state.endIndex).map(item => /*#__PURE__*/_jsxDEV(CollectionItem, { ...item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(RightArrowContainer, {\n          onClick: () => this.onArrowClick('right')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  shopItems: selectCollectionItems(ownProps.collectionCategory.title)(state)\n});\n\nexport default withRouter(connect(mapStateToProps, null)(ColllectionPreview));","map":{"version":3,"sources":["C:/Users/Predator/Documents/E-Commerce/src/Components/Collection-Preview/CollectionPreview.component.js"],"names":["React","CollectionItem","connect","withRouter","selectCollectionItems","CollectionPreviewContainer","TitleContainer","PreviewContainer","LeftArrowContainer","RightArrowContainer","LeftArrowLogo","RightArrowLogo","ColllectionPreview","Component","constructor","props","onArrowClick","direction","previewCount","state","diff","maxItems","endIndex","startIndex","setState","shopItems","items","length","title","collectionCategory","render","console","log","history","push","match","url","toUpperCase","filter","item","idx","map","id","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CollectionItem from '../CollectionItem/CollectionItem.component';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'; \r\nimport {selectCollectionItems} from '../../Redux/Shop/shop.selector';\r\nimport { ReactComponent as LeftArrowLogo} from '../../Assets/leftArrow.svg';\r\nimport { ReactComponent as RightArrowLogo} from '../../Assets/rightArrow.svg';\r\nimport { CollectionPreviewContainer, TitleContainer , PreviewContainer, LeftArrowContainer, RightArrowContainer} from './Collection-Preview.styles';\r\n\r\nexport  { LeftArrowLogo, RightArrowLogo };\r\n\r\nclass  ColllectionPreview extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            startIndex : 0,\r\n            endIndex : 3,\r\n            maxItems :  props.shopItems.items?  props.shopItems.items.length -1 : 0,\r\n           // items : this.props.shopItems.items ? this.props.shopItems.items : [],\r\n            previewCount  : 4,\r\n            title : this.props.collectionCategory.title\r\n        };\r\n    }\r\n\r\n    onArrowClick = (direction) => {\r\n        //max amount of items to preview on screen per category\r\n        const previewCount = this.state.previewCount;\r\n        //caluclate offset from array boundary to closest index based on direction\r\n        const diff = direction  === 'right' ? (this.state.maxItems - this.state.endIndex) :  ((0 - this.state.startIndex) * -1);\r\n        //if at array boundary do nothing\r\n        if(diff === 0)\r\n            return null;\r\n            //if array boundary is closer than the max amount 0of items we can display on screen\r\n            //move furthest index to render newest item\r\n            //move closest index to render the last item\r\n            diff <= previewCount ?\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - diff}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + diff})\r\n            :\r\n                direction === 'left' ?  this.setState({ endIndex : this.state.startIndex - 1, startIndex : this.state.startIndex - previewCount}) :\r\n                this.setState({ startIndex : this.state.endIndex + 1, endIndex : this.state.endIndex + previewCount})\r\n\r\n    };\r\n\r\n    render()\r\n    {\r\n        console.log('shop items ' , this.props.shopItems.items);\r\n        console.log('state items ' , this.state.items);\r\n        return(\r\n            <CollectionPreviewContainer> \r\n                <TitleContainer  onClick={ () => this.props.history.push(`${this.props.match.url}/${this.state.title}`)}> {this.state.title.toUpperCase()}</TitleContainer>\r\n                <PreviewContainer>\r\n                    <LeftArrowContainer onClick={() => this.onArrowClick('left')}/>\r\n                   {                                          //render only the indexs we have chosen max of 4\r\n                        this.props.shopItems.items.filter((item, idx) => (idx >= this.state.startIndex && idx <= this.state.endIndex) )\r\n                        .map((item) => (\r\n                            <CollectionItem key={item.id} {...item} /> \r\n                        ))\r\n                    }\r\n                    <RightArrowContainer onClick={() => this.onArrowClick('right')}/>\r\n                </PreviewContainer>\r\n            </CollectionPreviewContainer>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => ({\r\n    shopItems : selectCollectionItems(ownProps.collectionCategory.title)(state)\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(ColllectionPreview));"]},"metadata":{},"sourceType":"module"}